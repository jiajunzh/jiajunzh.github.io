<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[CS61B-1:Java Intro, Classes, Git]]></title>
    <url>%2F2019%2F07%2F05%2FCS61B-1-Java-Intro-Classes-Git%2F</url>
    <content type="text"><![CDATA[Running a Java Program.java -&gt; javac (compiler) -&gt; .class (Java bytecode) -&gt; java (Interpreter) -&gt; stuff happens.class file =&gt; safer (type checked) / faster (for machine to execute) / protect intellectual property System.out.print VS System.out.printlnSystem.out.print does not include a newline (a return) Static TypingStatically Typed languageAll Variables have a declared type and type can never be changedExpressions have a typeCompiler will check and make sure the type right before the program runs Pros and ConsGood =&gt; catch certain types of errors / type errors never occur on end users / easier to read and reason about the code / run efficiently (no runtime type checking)Bad =&gt; code is more verbose / code is less general but it can be solved by generics Function DefiningMethods = functionsMethod in Java returns only one value Static VS Non-StaticStatic MethodsClass1(client) uses Class2Launcher Class =&gt; test drive your program Instance Variables and Object InstantiationNot all objects of a class are equal=&gt; Approach1: create separate classes for each =&gt; redundancy=&gt; Approach2: classes instantiated and instances hold data (Type ins = new Type();)Instance Members (Variables/Methods) = Non-Static Members (Variables/Methods) ConstructorsParameterized instantiation Summary of Terminology Instance Variables (Properties) Non-static Methods (Instance Methods) Constructors (How to instantiate the class)Declaration + Instantiation + Assignment + Invocation of Methods Class (Static) Methods VS Instance (Non-Static) MethodsStatic Methods =&gt; invoked using the class nameInstance Methods =&gt; actions that can be taken only by a specific instance of a classKeyword this to refer to the current objectStatic Variables =&gt; properties inherent to class itself / accessed using name of class Arrays of Object2 steps=&gt; First use new keyword to create the array (Dog[] dogs = new Dog[2])=&gt; then use new again for each object that you want to put into the arrayThe array index starts at 0 in JavaArray.lengthAlternate way of defining array =&gt; int[] numbers = new int[] {4, 7, 10}; The Enhanced For Loop12345678for (String s : a) &#123; for (int j = 0; j &lt; 3; j += 1) &#123; System.out.println(s); if (s.contains("horse")) &#123; break; &#125; &#125;&#125;]]></content>
      <categories>
        <category>CS61B</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Git</tag>
        <tag>Data Structure</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F07%2F04%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>Others</category>
      </categories>
  </entry>
</search>
